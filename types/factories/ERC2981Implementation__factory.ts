/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ERC2981Implementation,
  ERC2981ImplementationInterface,
} from "../ERC2981Implementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x60808060405234601357603a908160198239f35b600080fdfe600080fdfea26469706673582212207b8fc0f79eae90ee556a3c6f64daa5c63d75cc391d52285e02a1c70eb58629a564736f6c63430008130033";

type ERC2981ImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC2981ImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC2981Implementation__factory extends ContractFactory {
  constructor(...args: ERC2981ImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC2981Implementation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ERC2981Implementation__factory {
    return super.connect(runner) as ERC2981Implementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC2981ImplementationInterface {
    return new Interface(_abi) as ERC2981ImplementationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC2981Implementation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC2981Implementation;
  }
}
