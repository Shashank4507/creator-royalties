/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  RoyaltyCalculator,
  RoyaltyCalculatorInterface,
} from "../RoyaltyCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contentRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "flatFee",
        type: "uint256",
      },
    ],
    name: "FlatRoyaltySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RoyaltyPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "RoyaltySettingsUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "calculateRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contentRegistry",
    outputs: [
      {
        internalType: "contract ContentRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFlat",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "flatFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
    ],
    name: "payRoyalty",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "royaltySettings",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isFlat",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "flatFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "flatFee",
        type: "uint256",
      },
    ],
    name: "setFlatRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    name: "setRoyaltyPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100be57601f610bcf38819003918201601f19168301916001600160401b038311848410176100c3578084926020946040528339810103126100be57516001600160a01b038116908190036100be57801561007a57600080546001600160a01b031916919091179055604051610af590816100da8239f35b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c696420636f6e74656e7420726567697374727920616464726573736044820152fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163127c044b146106125750806327a4f2bb146105ea5780634d8aa8de14610580578063b0708a3514610553578063b76c632b146104bb578063c4cf2a60146102dd5763c7cc9b111461007057600080fd5b602090816003193601126102d95780359283855260018352808520815161009681610871565b81546001600160a01b03908116808352600184015487840152600284015485840152600384015460608401528584015460ff1615156080840190815260059094015460a08401908152919390156102965751156102415751938434106101f4575b8780808088878751165af161010a610a7f565b50156101b857843411610153575b5091606093917ff3f83c9d88dc83497cc705129934b4aa146d32ecd677e6ed32c57009a077067e95935116815193338552840152820152a280f35b8434033481116101a5578880808093335af161016d610a7f565b5061011857835162461bcd60e51b8152908101869052600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b634e487b7160e01b895260118252602489fd5b835162461bcd60e51b81529081018690526016602482015275149bde585b1d1e481c185e5b595b9d0819985a5b195960521b6044820152606490fd5b835162461bcd60e51b8152908101869052602160248201527f496e73756666696369656e74207061796d656e7420666f7220666c61742066656044820152606560f81b6064820152608490fd5b5061024c3487610984565b93843410156100f757606490868086519262461bcd60e51b845283015260248201527f496e73756666696369656e74207061796d656e7420666f7220726f79616c74796044820152fd5b845162461bcd60e51b8152808701889052601860248201527f4e6f20726f79616c747920726563697069656e742073657400000000000000006044820152606490fd5b8380fd5b508290346104b75760603660031901126104b7578035906102fc610856565b835485516397c4d33360e01b815280840185815233602082810191909152604435956001600160a01b0394919390929091849183918716908290819060400103915afa9081156104ad5790610358918991610480575b506108dd565b82841691610367831515610938565b851561043e578589936104389593896005948c7f6df5e7493f5824043b67efd70e95edcbe08b6df094931f30ff07cfeaa0bda38f9c9d9e519788956103ab87610871565b8652898387019280845260018289019582875260608a019783895260a060808c019b848d52019b8c52835252209851166bffffffffffffffffffffffff60a01b89541617885551600188015551600287015551600386015584019051151560ff8019835416911617905551910155519283928360209093929193604081019460018060a01b031681520152565b0390a280f35b885162461bcd60e51b815291820152601f60248201527f466c617420666565206d7573742062652067726561746572207468616e203000604482015260649150fd5b6104a09150843d86116104a6575b61049881836108a3565b8101906108c5565b8a610352565b503d61048e565b89513d8a823e3d90fd5b5080fd5b503461054f57602036600319011261054f57808260c09460a0933581526001602052209083516104ea81610871565b600180851b038354169485825260018401548060208401526002850154928383820152600560ff6003880154968760608501528801541615159687608084015201549687910152815196875260208701528501526060840152608083015260a0820152f35b8280fd5b50913461057d578160031936011261057d57506105766020926024359035610984565b9051908152f35b80fd5b50903461054f57602036600319011261054f578060c0938335815260016020522060018060a01b0381541692600182015492600283015490600560ff60038601549486015416940154948151968752602087015285015260608401521515608083015260a0820152f35b5050346104b757816003193601126104b757905490516001600160a01b039091168152602090f35b9050346102d95760a03660031901126102d957813592610630610856565b85546397c4d33360e01b8452848401868152336020808301919091526044359693956001600160a01b039491939192608435926064359291869183918290036040019082908a165afa90811561084c5790610691918c9161082f57506108dd565b61271088116107ec579088939291858816956106ae871515610938565b8b8361077f575b926104389795928b600596938b809a977fa84f5c6cee4fadcc74ac6a25b1dbd6bdeb7d95350b57f39b1643a1587440dd0a9f9e9d519a6106f48c610871565b8b52878b01938452818b0194855260608b01958652600160808c0198828a5260a08d019a838c52835252209851166bffffffffffffffffffffffff60a01b89541617885551600188015551600287015551600386015584019051151560ff8019835416911617905551910155519283928360209093929193604081019460018060a01b031681520152565b50909180939495508211610799579089949392918b6106b5565b865162461bcd60e51b8152808501869052602760248201527f4d696e20616d6f756e74206d757374206265206c657373207468616e206d617860448201526608185b5bdd5b9d60ca1b6064820152608490fd5b855162461bcd60e51b8152808401859052601d60248201527f50657263656e746167652063616e6e6f742065786365656420313030250000006044820152606490fd5b6108469150863d88116104a65761049881836108a3565b38610352565b87513d8d823e3d90fd5b602435906001600160a01b038216820361086c57565b600080fd5b60c0810190811067ffffffffffffffff82111761088d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761088d57604052565b9081602091031261086c5751801515810361086c5790565b156108e457565b60405162461bcd60e51b815260206004820152602660248201527f4f6e6c7920636f6e74656e742063726561746f722063616e2073657420726f79604482015265616c7469657360d01b6064820152608490fd5b1561093f57565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b600090815260016020526040812090604051926109a084610871565b60018060a01b0383541691828552600184015491826020870152600285015494604087019586526003810154946060880195865260a0600560ff6004850154161515938460808c01520154980197885215610a755715610a035750505050505190565b909180939495508102928184041490151715610a6157506127109004915180151580610a58575b610a50575b505180151580610a47575b610a42575090565b905090565b50808211610a3a565b915038610a2f565b50808310610a2a565b634e487b7160e01b81526011600452602490fd5b5050935050505090565b3d15610aba573d9067ffffffffffffffff821161088d5760405191610aae601f8201601f1916602001846108a3565b82523d6000602084013e565b60609056fea2646970667358221220b509bb2d734a1ffb75dd4d0cf0309aef7035d73a4848e1001066d349a63a31cc64736f6c63430008130033";

type RoyaltyCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyCalculator__factory extends ContractFactory {
  constructor(...args: RoyaltyCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contentRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contentRegistry, overrides || {});
  }
  override deploy(
    _contentRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contentRegistry, overrides || {}) as Promise<
      RoyaltyCalculator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoyaltyCalculator__factory {
    return super.connect(runner) as RoyaltyCalculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyCalculatorInterface {
    return new Interface(_abi) as RoyaltyCalculatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoyaltyCalculator {
    return new Contract(address, _abi, runner) as unknown as RoyaltyCalculator;
  }
}
